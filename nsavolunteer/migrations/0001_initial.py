# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import django.db.models.deletion
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('nsaSchool', '0001_initial'),
        ('nsaEvents', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='FamilyAggHours',
            fields=[
                ('dateCreated', models.DateTimeField(auto_now_add=True)),
                ('dateUpdated', models.DateTimeField(auto_now=True)),
                ('familySumId', models.AutoField(serialize=False, verbose_name=b'Family Sum ID', primary_key=True, db_column=b'FamilySumId')),
                ('totalVolHours', models.DecimalField(decimal_places=3, db_column=b'totalVolunteerHours', default=0, max_digits=8, blank=True, null=True, verbose_name=b'Total Volunteer Hours')),
                ('trafficDutyCount', models.DecimalField(decimal_places=3, db_column=b'trafficDutyCount', default=0, max_digits=8, blank=True, null=True, verbose_name=b'Traffic Duty Count')),
                ('benchmarkDate', models.DateField(null=True, verbose_name=b'Bench Mark Date', db_column=b'benchMarkDate', blank=True)),
            ],
            options={
                'ordering': ['family'],
                'db_table': 'familyAggregate',
                'verbose_name_plural': 'Family Sums',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FamilyProfile',
            fields=[
                ('dateCreated', models.DateTimeField(auto_now_add=True)),
                ('dateUpdated', models.DateTimeField(auto_now=True)),
                ('familyProfileId', models.AutoField(serialize=False, verbose_name=b'Family Profile Id', primary_key=True, db_column=b'FamilyProfileId')),
                ('familyName', models.CharField(db_column=b'familyName', default=None, max_length=50, null=True, verbose_name=b'Family Name', db_index=True)),
                ('streetAddress', models.CharField(max_length=200, null=True, verbose_name=b'Street Address', db_column=b'streetAddress', blank=True)),
                ('city', models.CharField(max_length=50, null=True, verbose_name=b'city', db_column=b'city', blank=True)),
                ('zip', models.CharField(max_length=15, null=True, verbose_name=b'zip', db_column=b'zip', blank=True)),
                ('homePhone', models.CharField(db_column=b'homePhone', default=None, max_length=15, blank=True, null=True, verbose_name=b'Home Phone')),
                ('specialInfo', models.TextField(null=True, verbose_name=b'Family Note', db_column=b'VolunteerNote', blank=True)),
                ('trafficRequirement', models.IntegerField(default=6, null=True, verbose_name=b'Traffic Requirement', db_column=b'trafficReq', blank=True)),
                ('volunteerRequirement', models.IntegerField(default=40, null=True, verbose_name=b'Volunteer Requirement', db_column=b'volunteerReq', blank=True)),
                ('inactiveDate', models.DateField(null=True, verbose_name=b'Inactive Date', db_column=b'inactiveDate', blank=True)),
                ('active', models.BooleanField(default=True, verbose_name=b'active', db_column=b'active')),
                ('famvolunteers', models.ManyToManyField(related_name='family', db_table=b'familyVolunteers', verbose_name=b'Volunteers', to=settings.AUTH_USER_MODEL, blank=True)),
            ],
            options={
                'db_table': 'familyProfile',
                'verbose_name_plural': 'Family Profile',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HistoricalFamilyProfile',
            fields=[
                ('dateCreated', models.DateTimeField(editable=False, blank=True)),
                ('dateUpdated', models.DateTimeField(editable=False, blank=True)),
                ('familyProfileId', models.IntegerField(db_index=True, verbose_name=b'Family Profile Id', db_column=b'FamilyProfileId', blank=True)),
                ('familyName', models.CharField(db_column=b'familyName', default=None, max_length=50, null=True, verbose_name=b'Family Name', db_index=True)),
                ('streetAddress', models.CharField(max_length=200, null=True, verbose_name=b'Street Address', db_column=b'streetAddress', blank=True)),
                ('city', models.CharField(max_length=50, null=True, verbose_name=b'city', db_column=b'city', blank=True)),
                ('zip', models.CharField(max_length=15, null=True, verbose_name=b'zip', db_column=b'zip', blank=True)),
                ('homePhone', models.CharField(db_column=b'homePhone', default=None, max_length=15, blank=True, null=True, verbose_name=b'Home Phone')),
                ('specialInfo', models.TextField(null=True, verbose_name=b'Family Note', db_column=b'VolunteerNote', blank=True)),
                ('trafficRequirement', models.IntegerField(default=6, null=True, verbose_name=b'Traffic Requirement', db_column=b'trafficReq', blank=True)),
                ('volunteerRequirement', models.IntegerField(default=40, null=True, verbose_name=b'Volunteer Requirement', db_column=b'volunteerReq', blank=True)),
                ('inactiveDate', models.DateField(null=True, verbose_name=b'Inactive Date', db_column=b'inactiveDate', blank=True)),
                ('active', models.BooleanField(default=True, verbose_name=b'active', db_column=b'active')),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical family profile',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HistoricalRewardCardUsers',
            fields=[
                ('dateCreated', models.DateTimeField(editable=False, blank=True)),
                ('dateUpdated', models.DateTimeField(editable=False, blank=True)),
                ('RewardCardId', models.IntegerField(db_index=True, verbose_name=b'Reward Card ID', db_column=b'rewardCardId', blank=True)),
                ('storeName', models.CharField(max_length=25, null=True, verbose_name=b'Store', db_column=b'store', choices=[(b'King Soopers', b'King Soopers'), (b'Safeway', b'Safeway')])),
                ('customerCardNumber', models.CharField(max_length=50, null=True, verbose_name=b'Card Number', db_column=b'cardNumber')),
                ('active', models.BooleanField(default=True, verbose_name=b'active', db_column=b'active')),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('family', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_column=b'family', db_constraint=False, blank=True, to='nsavolunteer.FamilyProfile', null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('linkedUser', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_column=b'linkedUser', db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical reward card users',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HistoricalStudent',
            fields=[
                ('dateCreated', models.DateTimeField(editable=False, blank=True)),
                ('dateUpdated', models.DateTimeField(editable=False, blank=True)),
                ('studentId', models.IntegerField(db_index=True, verbose_name=b'StudentId', db_column=b'studentId', blank=True)),
                ('studentFirstName', models.CharField(max_length=100, null=True, verbose_name=b'Students First Name', db_column=b'studentFirstName')),
                ('studentLastName', models.CharField(max_length=100, null=True, verbose_name=b'Students Last Name', db_column=b'studentLastName')),
                ('activeStatus', models.BooleanField(default=True, verbose_name=b'Current Student', db_column=b'activeStatus')),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('grade', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_column=b'gradeLevel', db_constraint=False, blank=True, to='nsaSchool.GradeLevel', null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('teacher', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_column=b'teacher', db_constraint=False, blank=True, to='nsaSchool.Teachers', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical student',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HistoricalStudentToFamily',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('dateCreated', models.DateTimeField(editable=False, blank=True)),
                ('dateUpdated', models.DateTimeField(editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('group', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='nsavolunteer.FamilyProfile', null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical student to family',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HistoricalVolunteerInterests',
            fields=[
                ('dateCreated', models.DateTimeField(editable=False, blank=True)),
                ('dateUpdated', models.DateTimeField(editable=False, blank=True)),
                ('interestId', models.IntegerField(db_index=True, verbose_name=b'Interest Id', db_column=b'interestId', blank=True)),
                ('interestName', models.CharField(max_length=200, null=True, verbose_name=b'Interest', db_column=b'interestName')),
                ('description', models.TextField(null=True, verbose_name=b'Interest Description', db_column=b'interestDescription', blank=True)),
                ('active', models.BooleanField(default=True, verbose_name=b'Active', db_column=b'active')),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical volunteer interests',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HistoricalVolunteerProfile',
            fields=[
                ('dateCreated', models.DateTimeField(editable=False, blank=True)),
                ('dateUpdated', models.DateTimeField(editable=False, blank=True)),
                ('volunteerProfileID', models.IntegerField(db_index=True, verbose_name=b'Volunteer Profile Id', db_column=b'volunteerProfileId', blank=True)),
                ('firstName', models.CharField(max_length=200, null=True, verbose_name=b'First Name', db_column=b'firstName', blank=True)),
                ('lastName', models.CharField(max_length=200, null=True, verbose_name=b'Last Name', db_column=b'lastName', blank=True)),
                ('cellPhone', models.CharField(db_column=b'cellPhone', default=None, max_length=15, blank=True, null=True, verbose_name=b'cell Phone')),
                ('volStatus', models.CharField(db_column=b'volStatus', default=b'pending', choices=[(b'pending', b'Pending'), (b'approved', b'Approved')], max_length=15, blank=True, null=True, verbose_name=b'Volunteer Status')),
                ('doNotEmail', models.BooleanField(default=False, verbose_name=b'Do Not Email', db_column=b'emailOptOut')),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('linkedUserAccount', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical volunteer profile',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HistoricalVolunteerType',
            fields=[
                ('dateCreated', models.DateTimeField(editable=False, blank=True)),
                ('dateUpdated', models.DateTimeField(editable=False, blank=True)),
                ('volunteerTypeId', models.IntegerField(db_index=True, verbose_name=b'Volunteer Type ID', db_column=b'volunteerTypeId', blank=True)),
                ('volunteerType', models.CharField(max_length=200, null=True, verbose_name=b'Volunteer Type', db_column=b'volunteerType')),
                ('description', models.TextField(null=True, verbose_name=b'Volunteer Type Description', db_column=b'volTypeDescription', blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical volunteer type',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RewardCardUsage',
            fields=[
                ('dateCreated', models.DateTimeField(auto_now_add=True)),
                ('dateUpdated', models.DateTimeField(auto_now=True)),
                ('rewardCardusageId', models.AutoField(serialize=False, verbose_name=b'Reward Card Usage ID', primary_key=True, db_column=b'rewardCardUsageId')),
                ('customerCardNumber', models.CharField(max_length=50, null=True, verbose_name=b'Card Number (internal)', db_column=b'customerCardNumber', db_index=True)),
                ('refillDate', models.DateField(null=True, verbose_name=b'Refill Date', db_column=b'refillDate', blank=True)),
                ('refillValue', models.DecimalField(decimal_places=2, verbose_name=b'Refill Value', max_digits=8, db_column=b'refillValue')),
                ('volunteerHours', models.DecimalField(db_column=b'volunteerHours', decimal_places=3, max_digits=8, blank=True, null=True, verbose_name=b'Volunteer Hours')),
                ('storeName', models.CharField(db_column=b'store', choices=[(b'King Soopers', b'King Soopers'), (b'Safeway', b'Safeway')], max_length=25, blank=True, null=True, verbose_name=b'Store')),
                ('statementCardNumber', models.CharField(max_length=50, null=True, verbose_name=b'Card Number (statement)', db_column=b'StatementcustomerCardNumber', blank=True)),
                ('linkedFamily', models.ForeignKey(related_name='rewardCardFamilyLink', db_column=b'relatedFamily', blank=True, to='nsavolunteer.FamilyProfile', null=True, verbose_name=b'family')),
                ('schoolYear', models.ForeignKey(db_column=b'SchoolYear', verbose_name=b'School Year', to='nsaSchool.SchoolYear', null=True)),
                ('volunteerId', models.ForeignKey(related_name='rewardCardValue', db_column=b'volunteer', blank=True, to=settings.AUTH_USER_MODEL, null=True, verbose_name=b'Volunteer')),
            ],
            options={
                'ordering': ['-refillDate'],
                'db_table': 'rewardCardData',
                'verbose_name_plural': 'Reward Card Purchase Data',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RewardCardUsers',
            fields=[
                ('dateCreated', models.DateTimeField(auto_now_add=True)),
                ('dateUpdated', models.DateTimeField(auto_now=True)),
                ('RewardCardId', models.AutoField(serialize=False, verbose_name=b'Reward Card ID', primary_key=True, db_column=b'rewardCardId')),
                ('storeName', models.CharField(max_length=25, null=True, verbose_name=b'Store', db_column=b'store', choices=[(b'King Soopers', b'King Soopers'), (b'Safeway', b'Safeway')])),
                ('customerCardNumber', models.CharField(max_length=50, null=True, verbose_name=b'Card Number', db_column=b'cardNumber')),
                ('active', models.BooleanField(default=True, verbose_name=b'active', db_column=b'active')),
                ('family', models.ForeignKey(db_column=b'family', verbose_name=b'Family', to='nsavolunteer.FamilyProfile', null=True)),
                ('linkedUser', models.ForeignKey(related_name='rewardCardUser', db_column=b'linkedUser', verbose_name=b'Volunteer', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['dateCreated'],
                'db_table': 'rewardCardUserInformation',
                'verbose_name_plural': 'Reward Card User Information',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('dateCreated', models.DateTimeField(auto_now_add=True)),
                ('dateUpdated', models.DateTimeField(auto_now=True)),
                ('studentId', models.AutoField(serialize=False, verbose_name=b'StudentId', primary_key=True, db_column=b'studentId')),
                ('studentFirstName', models.CharField(max_length=100, null=True, verbose_name=b'Students First Name', db_column=b'studentFirstName')),
                ('studentLastName', models.CharField(max_length=100, null=True, verbose_name=b'Students Last Name', db_column=b'studentLastName')),
                ('activeStatus', models.BooleanField(default=True, verbose_name=b'Current Student', db_column=b'activeStatus')),
                ('grade', models.ForeignKey(db_column=b'gradeLevel', blank=True, to='nsaSchool.GradeLevel', null=True, verbose_name=b'Grade Level')),
                ('teacher', models.ForeignKey(related_name='students', on_delete=django.db.models.deletion.SET_NULL, db_column=b'teacher', blank=True, to='nsaSchool.Teachers', null=True)),
            ],
            options={
                'ordering': ['studentLastName'],
                'db_table': 'students',
                'verbose_name_plural': 'Students',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StudentToFamily',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('dateCreated', models.DateTimeField(auto_now_add=True)),
                ('dateUpdated', models.DateTimeField(auto_now=True)),
                ('group', models.ForeignKey(to='nsavolunteer.FamilyProfile')),
                ('student', models.ForeignKey(to='nsavolunteer.Student')),
            ],
            options={
                'ordering': ['student'],
                'db_table': 'studentToFamily',
                'verbose_name_plural': 'Student To Family',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Traffic_Duty',
            fields=[
                ('dateCreated', models.DateTimeField(auto_now_add=True)),
                ('dateUpdated', models.DateTimeField(auto_now=True)),
                ('trafficDutyId', models.AutoField(serialize=False, verbose_name=b'Traffic Duty ID', primary_key=True, db_column=b'TrafficDutyId')),
                ('weekStart', models.DateField(null=True, verbose_name=b'Traffic Duty Week Start', db_column=b'trafficDutyWeekStart', db_index=True)),
                ('weekEnd', models.DateField(null=True, verbose_name=b'Traffic Duty Week End', db_column=b'trafficDutyWeekEnd', db_index=True)),
                ('morning_shifts', models.DecimalField(db_column=b'morningShifts', decimal_places=3, max_digits=8, blank=True, null=True, verbose_name=b'Morning Shifts')),
                ('afternoon_shifts', models.DecimalField(db_column=b'afternoonShifts', decimal_places=3, max_digits=8, blank=True, null=True, verbose_name=b'Afternoon Shifts')),
                ('am_manager', models.BooleanField(default=False, verbose_name=b'Supervisor', db_column=b'am_manager')),
                ('kindie', models.BooleanField(default=False, verbose_name=b'Kindie', db_column=b'kindie')),
                ('totalTrafficShifts', models.DecimalField(db_column=b'totalTrafficShifts', decimal_places=3, max_digits=8, blank=True, null=True, verbose_name=b'Total Traffic Shifts')),
                ('volunteerHours', models.DecimalField(db_column=b'volunteerHours', decimal_places=3, max_digits=8, blank=True, null=True, verbose_name=b'Volunteer Hours')),
                ('linkedFamily', models.ForeignKey(related_name='trafficDutyFamily', db_column=b'relatedFamily', verbose_name=b'Family', to='nsavolunteer.FamilyProfile', null=True)),
                ('schoolYear', models.ForeignKey(db_column=b'SchoolYear', verbose_name=b'School Year', to='nsaSchool.SchoolYear', null=True)),
                ('volunteerId', models.ForeignKey(related_name='trafficDuty_User', db_column=b'volunteer', blank=True, to=settings.AUTH_USER_MODEL, null=True, verbose_name=b'Volunteer')),
            ],
            options={
                'ordering': ['weekStart'],
                'db_table': 'traffic_Duty',
                'verbose_name_plural': 'Traffic Duty',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='VolunteerHours',
            fields=[
                ('dateCreated', models.DateTimeField(auto_now_add=True)),
                ('dateUpdated', models.DateTimeField(auto_now=True)),
                ('volunteerHoursId', models.AutoField(serialize=False, verbose_name=b'Volunteer Hours Id', primary_key=True, db_column=b'volunteerHoursId')),
                ('task', models.CharField(max_length=100, null=True, verbose_name=b'task', db_column=b'task', blank=True)),
                ('eventDate', models.DateField(null=True, verbose_name=b'Volunteer Date', db_column=b'volunteerDate', db_index=True)),
                ('volunteerHours', models.DecimalField(null=True, verbose_name=b'Volunteer Hours', max_digits=8, db_column=b'volunteerHours', decimal_places=3)),
                ('approved', models.BooleanField(default=False, verbose_name=b'Approved', db_column=b'approved')),
                ('event', models.ForeignKey(related_name='volHours', db_column=b'event', verbose_name=b'Event', to='nsaEvents.NsaEvents', null=True)),
                ('family', models.ForeignKey(db_column=b'family', verbose_name=b'Family', to='nsavolunteer.FamilyProfile', help_text=b'Select Family to log hours for.')),
                ('schoolYear', models.ForeignKey(db_column=b'SchoolYear', verbose_name=b'School Year', to='nsaSchool.SchoolYear', null=True)),
                ('volunteer', models.ForeignKey(db_column=b'volunteer', verbose_name=b'volunteer', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['eventDate'],
                'db_table': 'volunteerHours',
                'verbose_name_plural': 'Volunteer Hours',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='VolunteerInterests',
            fields=[
                ('dateCreated', models.DateTimeField(auto_now_add=True)),
                ('dateUpdated', models.DateTimeField(auto_now=True)),
                ('interestId', models.AutoField(serialize=False, verbose_name=b'Interest Id', primary_key=True, db_column=b'interestId')),
                ('interestName', models.CharField(max_length=200, null=True, verbose_name=b'Interest', db_column=b'interestName')),
                ('description', models.TextField(null=True, verbose_name=b'Interest Description', db_column=b'interestDescription', blank=True)),
                ('active', models.BooleanField(default=True, verbose_name=b'Active', db_column=b'active')),
            ],
            options={
                'ordering': ['interestName'],
                'db_table': 'volunteerInterests',
                'verbose_name_plural': 'Interest Type',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='VolunteerProfile',
            fields=[
                ('dateCreated', models.DateTimeField(auto_now_add=True)),
                ('dateUpdated', models.DateTimeField(auto_now=True)),
                ('volunteerProfileID', models.AutoField(serialize=False, verbose_name=b'Volunteer Profile Id', primary_key=True, db_column=b'volunteerProfileId')),
                ('firstName', models.CharField(max_length=200, null=True, verbose_name=b'First Name', db_column=b'firstName', blank=True)),
                ('lastName', models.CharField(max_length=200, null=True, verbose_name=b'Last Name', db_column=b'lastName', blank=True)),
                ('cellPhone', models.CharField(db_column=b'cellPhone', default=None, max_length=15, blank=True, null=True, verbose_name=b'cell Phone')),
                ('volStatus', models.CharField(db_column=b'volStatus', default=b'pending', choices=[(b'pending', b'Pending'), (b'approved', b'Approved')], max_length=15, blank=True, null=True, verbose_name=b'Volunteer Status')),
                ('doNotEmail', models.BooleanField(default=False, verbose_name=b'Do Not Email', db_column=b'emailOptOut')),
                ('interest', models.ManyToManyField(related_name='profile_interest', db_table=b'profileToInterest', verbose_name=b'Volunteer Interests', to='nsavolunteer.VolunteerInterests', blank=True)),
                ('linkedUserAccount', models.OneToOneField(related_name='linkedUser', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['linkedUserAccount__name'],
                'db_table': 'volunteerProfile',
                'verbose_name_plural': 'Volunteer Profile',
                'permissions': (('is_avc', 'Is AVC'), ('is_volunteer_manager', 'Is Volunteer Manager'), ('is_traffic_manager', 'Is Traffic Manager'), ('is_reward_card_manager', 'Is Reward Card Manager')),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='VolunteerType',
            fields=[
                ('dateCreated', models.DateTimeField(auto_now_add=True)),
                ('dateUpdated', models.DateTimeField(auto_now=True)),
                ('volunteerTypeId', models.AutoField(serialize=False, verbose_name=b'Volunteer Type ID', primary_key=True, db_column=b'volunteerTypeId')),
                ('volunteerType', models.CharField(max_length=200, null=True, verbose_name=b'Volunteer Type', db_column=b'volunteerType')),
                ('description', models.TextField(null=True, verbose_name=b'Volunteer Type Description', db_column=b'volTypeDescription', blank=True)),
            ],
            options={
                'ordering': ['volunteerType'],
                'db_table': 'volunteerType',
                'verbose_name_plural': 'Volunteer Type',
            },
            bases=(models.Model,),
        ),
        migrations.AddField(
            model_name='volunteerprofile',
            name='volunteerType',
            field=models.ForeignKey(db_column=b'volunteerType', blank=True, to='nsavolunteer.VolunteerType', null=True, verbose_name=b'Volunteer Type'),
            preserve_default=True,
        ),
        migrations.AlterUniqueTogether(
            name='studenttofamily',
            unique_together=set([('student', 'group')]),
        ),
        migrations.AlterUniqueTogether(
            name='rewardcardusers',
            unique_together=set([('storeName', 'customerCardNumber')]),
        ),
        migrations.AddField(
            model_name='historicalvolunteerprofile',
            name='volunteerType',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_column=b'volunteerType', db_constraint=False, blank=True, to='nsavolunteer.VolunteerType', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='historicalstudenttofamily',
            name='student',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='nsavolunteer.Student', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='familyprofile',
            name='students',
            field=models.ManyToManyField(to='nsavolunteer.Student', verbose_name=b'Students', through='nsavolunteer.StudentToFamily', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='familyagghours',
            name='family',
            field=models.ForeignKey(related_name='familyAgg', db_column=b'relatedFamily', verbose_name=b'Family', to='nsavolunteer.FamilyProfile', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='familyagghours',
            name='schoolYear',
            field=models.ForeignKey(db_column=b'schoolYear', verbose_name=b'School Year', to='nsaSchool.SchoolYear', null=True),
            preserve_default=True,
        ),
    ]
